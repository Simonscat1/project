[{"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\index.js":"1","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\App.jsx":"2","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\socket.js":"3","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Home\\Home.jsx":"4","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Login\\Login.jsx":"5","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Navbar\\Navbar.jsx":"6","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Post\\Post.jsx":"7","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Groups\\Groups.jsx":"8","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Profile\\Profile.jsx":"9","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Profile\\Profile.jsx":"10","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Card\\Card.jsx":"11","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\FrindList\\FriendList.jsx":"12","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Modal\\Modal.jsx":"13","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Modal_home\\Modal_home.jsx":"14","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\AdminPanel\\AdminPanel.jsx":"15","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Panel\\Panel.jsx":"16","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\ProfileGroup\\ProfileGroup.jsx":"17","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Groupsprofile\\Groupsprofile.jsx":"18","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\GroupsProfile\\GroupsProfile.jsx":"19","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\ModalRegGrope\\ModalRegGrope.jsx":"20"},{"size":207,"mtime":1681301311252,"results":"21","hashOfConfig":"22"},{"size":4970,"mtime":1682881990332,"results":"23","hashOfConfig":"22"},{"size":145,"mtime":1682873579744,"results":"24","hashOfConfig":"22"},{"size":3483,"mtime":1683051728665,"results":"25","hashOfConfig":"22"},{"size":718,"mtime":1681301311248,"results":"26","hashOfConfig":"22"},{"size":9921,"mtime":1683040457107,"results":"27","hashOfConfig":"22"},{"size":644,"mtime":1681301311251,"results":"28","hashOfConfig":"22"},{"size":3247,"mtime":1683049975225,"results":"29","hashOfConfig":"22"},{"size":4250,"mtime":1682936972648,"results":"30","hashOfConfig":"22"},{"size":299,"mtime":1682940935094,"results":"31","hashOfConfig":"22"},{"size":402,"mtime":1682534653484,"results":"32","hashOfConfig":"22"},{"size":875,"mtime":1682881075311,"results":"33","hashOfConfig":"22"},{"size":3288,"mtime":1683038433752,"results":"34","hashOfConfig":"22"},{"size":2456,"mtime":1682963067995,"results":"35","hashOfConfig":"22"},{"size":290,"mtime":1682711208499,"results":"36","hashOfConfig":"22"},{"size":2975,"mtime":1683052014125,"results":"37","hashOfConfig":"22"},{"size":1253,"mtime":1683051882569,"results":"38","hashOfConfig":"22"},{"size":1186,"mtime":1682888036549,"results":"39","hashOfConfig":"22"},{"size":1331,"mtime":1682939939619,"results":"40","hashOfConfig":"22"},{"size":2634,"mtime":1683052161739,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"bv4zfl",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"45"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\index.js",[],[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\App.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\socket.js",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Home\\Home.jsx",["106"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport socket from \"../../socket\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport FriendList from \"../../Pages/FrindList/FriendList\"\r\nimport Modal_home from \"../../Pages/Modal_home/Modal_home\";\r\n\r\nimport \"./home.css\"\r\n\r\nconst Home = ({ posts }) => {\r\n    \r\n    const [ user, setUser ] = useState(null)\r\n    const [wordData,setWordData] = useState(posts[0])\r\n    const [modal, setModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const getsUser = () => {\r\n            socket.on('getNothings', async (data) => {\r\n                setUser(data)\r\n            })\r\n        }\r\n        getsUser()\r\n    },[])\r\n\r\n    const friendsGets = (users) => {\r\n        return(\r\n            <div className=\"\" key={users._id}>\r\n                <ul>\r\n                    <li>\r\n                        <FriendList friend={users} />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const postes = (post) => {\r\n        return(\r\n            <div className=\"\" key={post._id}>\r\n                <ul className=\"\">\r\n                    <Card posts={post} />\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    const Slider = ({data}) => {\r\n        return(\r\n            <div className=\"\">\r\n                <h2>{data?.title}</h2>\r\n                <Link to={`/post/${data?._id}`}>\r\n                    <button href={`/post/${data?._id}`}>перейти</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleClick(index){\r\n        const slider = posts[index]\r\n        setWordData(slider)\r\n    }\r\n    const Toggle = () => setModal(!modal);\r\n    \r\n    return(\r\n        <div className=\"home\">\r\n            <div className=\"cardHome\">\r\n                {user == null ?(\r\n                    <p>Вход</p>\r\n                ):(\r\n                    <h2>{user?.friends?.map(users => friendsGets(users))}</h2>\r\n                )}\r\n                \r\n            </div>\r\n            <div className=\"cardHome large\">\r\n                <Slider data={wordData}/>\r\n                <div className='flex_row'>\r\n                \r\n                    {posts?.map((data, i) =>\r\n                        <h1 key={i} onClick={()=>handleClick(i)}>.</h1>\r\n                    )}\r\n                    {/* <button className=\"prev\" onClick={() => setIndex(index - 1)}>\r\n                        <i className=\"fas fa-arrow-right\" />\r\n                        123\r\n                    </button>\r\n                    <button className=\"next\" onClick={() => setIndex(index + 1)}>\r\n                        <i className=\"fas fa-arrow-left\" />\r\n                        312\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"cardHome\">\r\n                <h2>Coming soon</h2>\r\n            </div>\r\n            <div className=\"cardHome\">\r\n                <h2>Coming soon</h2>\r\n            </div>\r\n            <div className=\"cardHome large\">\r\n                 {user == null ?(\r\n                    <></>\r\n                ):(\r\n                    <button onClick={() => Toggle()}>Создать турнир</button>\r\n                )}\r\n                {posts?.map((post) => postes(post))}\r\n            </div>\r\n            <div className=\"cardHome\">\r\n                <h2>Coming soon</h2>\r\n            </div>\r\n            <Modal_home show={modal} close={Toggle}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Login\\Login.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Navbar\\Navbar.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Post\\Post.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Groups\\Groups.jsx",["107"],[],"import Modal from \"../../Pages/Modal/Modal\"\r\nimport ProfileGroup from \"../../Pages/ProfileGroup/ProfileGroup\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./groups.css\"\r\nimport socket from \"../../socket\";\r\n\r\nconst Groups = ({ user }) => {\r\n    const [modal, setModal] = useState(false)\r\n    const [group, setGroup] = useState(null);\r\n    const [list, setList] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getGroup = () => {\r\n            fetch(`/api/posts/group/get?userID=${user.userID}`, {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true,\r\n                }\r\n            }).then((response) => {\r\n                if(response.status === 200) return response.json();\r\n                throw new Error(\"Ошибка\");\r\n            }).then((resObject) => {\r\n                    setGroup(resObject.groups);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getGroup();\r\n    },[user]);\r\n\r\n    const Toggle = () => setModal(!modal); \r\n    const GetsAllGroup = (groups, user) => {\r\n        if(groups != null){\r\n            return(\r\n                <div className=\"card\" key={groups._id}>\r\n                    <ul className=\"\">\r\n                        <ProfileGroup group={groups} user={user}/>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    function hedlerClick(event){\r\n        socket.emit(\"search_group\",  {name: event.target.value, socketID: socket.id})\r\n    }\r\n    useEffect(() => {\r\n        const getGropes = () => {\r\n            socket.on(\"get_Grope\", (data) => {\r\n                setGroup(data)\r\n            })\r\n        }\r\n        getGropes()\r\n    },[])\r\n    return(\r\n        <div className=\"main\">\r\n            <div className=\"search-container-above-cards\">\r\n                <div className=\"search-container\">\r\n                    <input type=\"text\" className=\"search-input-above-cards\" placeholder=\"Search...\" onChange={ (event) => {setList(event.target.value)} }/>\r\n                    <button className=\"search-button-above-cards\" onClick={hedlerClick} value={list}>Search</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"cards-container\">\r\n                <div className=\"card-actions\">\r\n                        <button className=\"card-action-button\">Ваши Группы</button>\r\n                        <button className=\"card-action-button\" onClick={() => Toggle()}>Создать Группу</button>\r\n                </div>\r\n                {group?.filter((item) => {\r\n                    if(item === \"\"){\r\n                        return item\r\n                    }else if(item.title.toLowerCase().includes(list.toLowerCase())){\r\n                        return item\r\n                    }\r\n                }).map((item) => (\r\n                    GetsAllGroup(item, user)\r\n                ))}\r\n            </div>\r\n            <Modal show={modal} close={Toggle} userID={user.userID} userName={user.userName}/>\r\n        </div>\r\n    )\r\n};\r\nexport default Groups;","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Profile\\Profile.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Profile\\Profile.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Card\\Card.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\FrindList\\FriendList.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Modal\\Modal.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\Modal_home\\Modal_home.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\AdminPanel\\AdminPanel.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Panel\\Panel.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\ProfileGroup\\ProfileGroup.jsx",["108"],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\Groupsprofile\\Groupsprofile.jsx",[],[],"C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Components\\GroupsProfile\\GroupsProfile.jsx",["109"],[],"import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst GroupsProfile = ({ user }) => {\r\n    const location = useLocation()\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [group, setGroup] = useState(null);\r\n    useEffect(() => {\r\n        const getGroup = () => {\r\n            fetch(`/api/posts/group/get?userID=${user.userID}`, {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true,\r\n                }\r\n            }).then((response) => {\r\n                if(response.status === 200) return response.json();\r\n                throw new Error(\"Ошибка\");\r\n            }).then((resObject) => {\r\n                resObject.groups.forEach(group => {\r\n                    if(group.title === path){\r\n                        setGroup(group);\r\n                    }\r\n                });\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getGroup();\r\n    },[user]);\r\n    console.log(group)\r\n    return( \r\n        <>\r\n            {group?.title}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GroupsProfile;","C:\\Users\\kazak\\OneDrive\\Рабочий стол\\project\\client\\src\\Pages\\ModalRegGrope\\ModalRegGrope.jsx",[],[],{"ruleId":"110","severity":1,"message":"111","line":108,"column":13,"nodeType":"112","messageId":"113","endLine":108,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":70,"column":39,"nodeType":"116","messageId":"117","endLine":70,"endColumn":41},{"ruleId":"118","severity":1,"message":"119","line":24,"column":77,"nodeType":"120","messageId":"121","endLine":24,"endColumn":79},{"ruleId":"122","severity":1,"message":"123","line":32,"column":7,"nodeType":"124","endLine":32,"endColumn":13,"suggestions":"125"},"react/jsx-pascal-case","Imported JSX component Modal_home must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["126"],{"desc":"127","fix":"128"},"Update the dependencies array to be: [path, user]",{"range":"129","text":"130"},[1183,1189],"[path, user]"]