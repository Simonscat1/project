{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\project\\\\client\\\\src\\\\Components\\\\Navbar\\\\Navbar.jsx\";\nimport Profile from \"../../Pages/Profile/Profile\";\nimport Discord from \"../../Images/DiscordAvatars.jpg\";\nimport { useEffect, useState } from \"react\";\nimport socket from \"../../socket.js\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = _ref => {\n  var _s = $RefreshSig$();\n  let {\n    user\n  } = _ref;\n  const Logout = () => {\n    window.open(`${process.env.REACT_APP_REDIRECT}/auth/logout`, \"_self\");\n  };\n  function GetUser(props) {\n    _s();\n    const isGetUser = props.isGetUser;\n    const [lastPong, setLastPong] = useState(null);\n    useEffect(() => {\n      socket.emit(\"post_nothings\", isGetUser.userID);\n    });\n    useEffect(() => {\n      socket.on('nothings', data => {\n        setLastPong(data);\n      });\n    }, [setLastPong]);\n    console.log(lastPong);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listItem\",\n        children: isGetUser.avatar === null ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Discord,\n          alt: \"\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isGetUser.avatar,\n          alt: \"\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listItem\",\n        children: Array(isGetUser).map(user => /*#__PURE__*/_jsxDEV(Profile, {\n          user: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listItem\",\n        onClick: Logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  _s(GetUser, \"McDm/0FLy41CVNOUGVBlqS6Rftc=\");\n  if (user === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listItem\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/\",\n        children: \"Twitch Revels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GetUser, {\n      isGetUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Profile","Discord","useEffect","useState","socket","Link","Navbar","user","Logout","window","open","process","env","REACT_APP_REDIRECT","GetUser","props","isGetUser","lastPong","setLastPong","emit","userID","on","data","console","log","avatar","Array","map","undefined"],"sources":["C:/Users/kazak/Рабочий стол/project/client/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import Profile from \"../../Pages/Profile/Profile\";\r\nimport Discord from \"../../Images/DiscordAvatars.jpg\"\r\nimport { useEffect, useState } from \"react\";\r\nimport socket from \"../../socket.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\"\r\n\r\nconst Navbar = ({ user }) => {\r\n    const Logout = () => {\r\n        window.open(`${process.env.REACT_APP_REDIRECT}/auth/logout`, \"_self\")\r\n    }\r\n    function GetUser(props){\r\n        const isGetUser = props.isGetUser\r\n        const [lastPong, setLastPong] = useState(null);\r\n\r\n        useEffect(() => {\r\n            socket.emit(\"post_nothings\", isGetUser.userID)\r\n        })\r\n        useEffect(() => {\r\n            socket.on('nothings', (data) => {\r\n                setLastPong(data)\r\n            })\r\n        }, [setLastPong])\r\n        console.log(lastPong)\r\n        \r\n        return (\r\n            <ul className=\"list\">\r\n                <li className=\"listItem\">\r\n                    {/* <div>\r\n                        <div>\r\n                            Сделать увед лист и добавление в друзя или нет\r\n                            {lastPong === null ? (\r\n                                <div>\r\n                                    \r\n                                </div>\r\n                            ):(\r\n                                <div>\r\n                                    \r\n                                    <input type=\"hidden\" name=\"senderId\" id=\"senderId\" value={lastPong.forEach(element => element.id)}/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div> */}\r\n                    {isGetUser.avatar === null ? (\r\n                        <img \r\n                            src={Discord}\r\n                            alt=\"\"\r\n                            className=\"avatar\"\r\n                        />\r\n                    ):(\r\n                        <img \r\n                            src={isGetUser.avatar}\r\n                            alt=\"\"\r\n                            className=\"avatar\"\r\n                        />\r\n                    )}\r\n                </li>\r\n                <li className=\"listItem\">\r\n                    {Array(isGetUser).map(user =>(\r\n                        <Profile key={user} user={user} />\r\n                    ))}\r\n                </li>\r\n                <li className=\"listItem\" onClick={Logout}>\r\n                    Logout\r\n                </li>\r\n                </ul>\r\n\r\n        )\r\n    }\r\n    if(user === undefined){\r\n        return( \r\n            <ul className=\"list\">\r\n                <li className=\"listItem\">\r\n                    <Link className=\"link\" to=\"login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"navbar\">\r\n            <span className=\"logo\">\r\n                <Link className=\"link\" to=\"/\">\r\n                    Twitch Revels\r\n                </Link>\r\n            </span>\r\n            <GetUser isGetUser={user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}