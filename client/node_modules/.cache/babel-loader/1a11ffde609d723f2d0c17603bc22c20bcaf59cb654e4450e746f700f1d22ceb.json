{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\project\\\\client\\\\src\\\\Components\\\\Navbar\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport Profile from \"../../Pages/Profile/Profile\";\nimport Notification from \"../../Images/Notification.svg\";\nimport Discord from \"../../Images/DiscordAvatars.jpg\";\nimport { useEffect, useState } from \"react\";\nimport socket from \"../../socket.js\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  const Logout = async () => {\n    window.open(`${process.env.REACT_APP_REDIRECT}/auth/logout`, \"_self\");\n  };\n  const [notification, setNotification] = useState(null);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    const post_nothings = () => {\n      if (user !== undefined) {\n        socket.emit('post_nothings', user.userID);\n      }\n    };\n    const getNothings = () => {\n        if (user !== undefined) {\n          socket.on('getNothings', data => {\n            setNotification(data);\n          });\n        }\n      },\n      iterval = setInterval(() => {\n        post_nothings();\n        getNothings();\n      }, 1000);\n    return () => {\n      clearInterval(iterval);\n    };\n  });\n  function GetUser(props) {\n    const isGetUser = props.isGetUser;\n    const displayNotification = _ref2 => {\n      let {\n        id,\n        userNames,\n        avatar\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification\",\n          children: userNames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    };\n    notification.forEach(element => {\n      console.log(element);\n    });\n    if (isGetUser === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"listItem\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"listItem\",\n          children: isGetUser.avatar === null ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Discord,\n            alt: \"\",\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isGetUser.avatar,\n            alt: \"\",\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"listItem\",\n          children: Array(isGetUser).map(user => /*#__PURE__*/_jsxDEV(Profile, {\n            user: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"listItem\",\n          onClick: Logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/\",\n        children: \"Twitch Revels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GetUser, {\n      isGetUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"1a2TswkTxQcJOELi63cBX3uPFs0=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Profile","Notification","Discord","useEffect","useState","socket","Link","Navbar","user","Logout","window","open","process","env","REACT_APP_REDIRECT","notification","setNotification","setOpen","post_nothings","undefined","emit","userID","getNothings","on","data","iterval","setInterval","clearInterval","GetUser","props","isGetUser","displayNotification","id","userNames","avatar","forEach","element","console","log","Array","map"],"sources":["C:/Users/kazak/Рабочий стол/project/client/src/Components/Navbar/Navbar.jsx"],"sourcesContent":["import Profile from \"../../Pages/Profile/Profile\";\r\nimport Notification from \"../../Images/Notification.svg\"\r\nimport Discord from \"../../Images/DiscordAvatars.jpg\"\r\nimport { useEffect, useState } from \"react\";\r\nimport socket from \"../../socket.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\"\r\n\r\nconst Navbar = ({ user }) => {\r\n    const Logout = async () => {\r\n        window.open(`${process.env.REACT_APP_REDIRECT}/auth/logout`, \"_self\")\r\n        \r\n    }\r\n    const [notification, setNotification] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const post_nothings = () => {\r\n            if(user !== undefined ){\r\n                socket.emit('post_nothings', user.userID)\r\n            }\r\n        }\r\n        const getNothings = () => {\r\n            if(user !== undefined ){\r\n                socket.on('getNothings', (data) => {\r\n                    setNotification(data)\r\n                })\r\n            }\r\n        },\r\n        iterval = setInterval(() => {\r\n            post_nothings()\r\n            getNothings()\r\n        },1000)\r\n        return () => {\r\n            clearInterval(iterval)\r\n        }\r\n    })\r\n    \r\n    function GetUser(props){\r\n        const isGetUser = props.isGetUser\r\n        const displayNotification = ({ id, userNames, avatar }) => {\r\n            return(\r\n                <ul key={id}>\r\n                    <span className=\"notification\">{userNames}</span>\r\n                </ul>\r\n                \r\n            )\r\n        }\r\n        notification.forEach(element => {\r\n            console.log(element)\r\n        });\r\n        if(isGetUser === undefined){\r\n            return( \r\n                <ul className=\"list\">\r\n                    <li className=\"listItem\">\r\n                        <Link className=\"link\" to=\"login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }else {\r\n            return (\r\n                <ul className=\"list\">\r\n                    <li className=\"listItem\">\r\n                        {/* <div className=\"listItem\">\r\n                            <div className=\"icons\">\r\n                                <div className=\"icon\" onClick={() => setOpen(!open)}>\r\n                                    <img src={Notification} className=\"iconImg\" alt=\"\" />\r\n                                    {notification.length > 0 && <div>{notification.length}</div>}\r\n                                </div>\r\n                            </div>\r\n                            {open && (\r\n                                <div className=\"notifications\">\r\n                                    {notification?.map(n => displayNotification(n))}\r\n                                    <button>Mark as read</button>\r\n                                </div>\r\n                            )}\r\n                        </div> */}\r\n                        {isGetUser.avatar === null ? (\r\n                            <img \r\n                                src={Discord}\r\n                                alt=\"\"\r\n                                className=\"avatar\"\r\n                            />\r\n                        ):(\r\n                            <img \r\n                                src={isGetUser.avatar}\r\n                                alt=\"\"\r\n                                className=\"avatar\"\r\n                            />\r\n                        )}\r\n                    </li>\r\n                    <li className=\"listItem\">\r\n                        {Array(isGetUser).map(user =>(\r\n                            <Profile key={user} user={user} />\r\n                        ))}\r\n                    </li>\r\n                    <li className=\"listItem\" onClick={Logout}>\r\n                        Logout\r\n                    </li>\r\n                 </ul>\r\n\r\n            )\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"navbar\">\r\n            <span className=\"logo\">\r\n                <Link className=\"link\" to=\"/\">\r\n                    Twitch Revels\r\n                </Link>\r\n            </span>\r\n            <GetUser isGetUser={user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}