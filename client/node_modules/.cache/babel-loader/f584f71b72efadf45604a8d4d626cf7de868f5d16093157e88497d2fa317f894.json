{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\project\\\\client\\\\src\\\\Components\\\\Panel\\\\Panel.jsx\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ModalPanel from \"../../Pages/ModalPanel/ModalPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst admin = [\"323827486750146561\"];\nconst Panel = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    user\n  } = _ref;\n  const [reqPost, setReqPost] = useState(null);\n  useEffect(() => {\n    const getPostReq = () => {\n      fetch('/api/posts/req/get', {\n        method: \"GET\",\n        credentials: 'include',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Credentials\": true\n        }\n      }).then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"Ошибка\");\n      }).then(resObject => {\n        setReqPost(resObject.post_req);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    getPostReq();\n  });\n  const GetUser = _ref2 => {\n    _s();\n    let {\n      isUserGet,\n      reqPost\n    } = _ref2;\n    const [modal, setModal] = useState(false);\n    const Toggle = () => setModal(!modal);\n    function Postes_add(reqPost) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [reqPost.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"\",\n            onClick: () => Toggle(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"\",\n            title: \"delete\",\n            value: reqPost._id,\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalPanel, {\n          show: modal,\n          close: Toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, reqPost._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: reqPost.map(reqPost => Postes_add(reqPost))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  };\n  _s(GetUser, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n  const GuestGreeting = _ref3 => {\n    let {\n      isUserGets\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"What are doing in my swamp \", isUserGets.userName]\n    }, void 0, true);\n  };\n  function Greeting(props) {\n    const isLoggedIn = props.isLoggedIn.userID;\n    for (let i = 0; i < admin.length; i++) {\n      if (admin[i] === isLoggedIn) {\n        if (reqPost !== null) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(GetUser, {\n              isUserGet: user,\n              reqPost: reqPost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false);\n        }\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(GuestGreeting, {\n      isUserGets: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Greeting, {\n      isLoggedIn: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(Panel, \"5KAeaCBdyv/TdhOSHpLpnQ/ttLk=\");\n_c = Panel;\nexport default Panel;\nvar _c;\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["useEffect","useState","axios","ModalPanel","admin","Panel","user","reqPost","setReqPost","getPostReq","fetch","method","credentials","headers","then","response","status","json","Error","resObject","post_req","catch","err","console","log","GetUser","isUserGet","modal","setModal","Toggle","Postes_add","title","_id","map","GuestGreeting","isUserGets","userName","Greeting","props","isLoggedIn","userID","i","length"],"sources":["C:/Users/kazak/OneDrive/Рабочий стол/project/client/src/Components/Panel/Panel.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport ModalPanel from \"../../Pages/ModalPanel/ModalPanel\"\r\nconst admin = [\"323827486750146561\"]\r\n\r\nconst Panel = ({ user }) => {\r\n    const [reqPost, setReqPost] = useState(null)\r\n    useEffect(() => {\r\n        const getPostReq = () => {\r\n            fetch('/api/posts/req/get', {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true,\r\n                }\r\n            }).then((response) => {\r\n                if(response.status === 200) return response.json();\r\n                throw new Error(\"Ошибка\");\r\n            }).then((resObject) => { \r\n                    setReqPost(resObject.post_req)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getPostReq();\r\n    })\r\n    \r\n    const GetUser = ({ isUserGet,reqPost }) => {\r\n\r\n        const [modal, setModal] = useState(false)\r\n        const Toggle = () => setModal(!modal);\r\n\r\n        function Postes_add(reqPost){\r\n            return(\r\n                <div className=\"\" key={reqPost._id}>\r\n                    <ul>\r\n                        {reqPost.title}\r\n                        <button className=\"\" onClick={() => Toggle()} >Добавить</button>\r\n                        <button className=\"\" title=\"delete\" value={reqPost._id}>Удалить</button>\r\n                    </ul>\r\n                    <ModalPanel show={modal} close={Toggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {reqPost.map(reqPost => Postes_add(reqPost))}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    const GuestGreeting = ({ isUserGets }) =>{\r\n        return(\r\n            <>What are doing in my swamp {isUserGets.userName}</>\r\n        )\r\n    }\r\n    function Greeting(props){\r\n        const isLoggedIn = props.isLoggedIn.userID\r\n        for(let i = 0; i < admin.length; i++){\r\n            if(admin[i] === isLoggedIn){\r\n                if(reqPost !== null){\r\n                    return (\r\n                        <>\r\n                            <GetUser isUserGet={user} reqPost={reqPost} />\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return <GuestGreeting isUserGets={user} />;\r\n    }\r\n    return(\r\n        <>\r\n            <Greeting isLoggedIn={user} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Panel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}