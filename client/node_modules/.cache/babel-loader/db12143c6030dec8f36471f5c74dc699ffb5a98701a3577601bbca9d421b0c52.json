{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\project\\\\client\\\\src\\\\Components\\\\Groups\\\\Groups.jsx\",\n  _s = $RefreshSig$();\nimport Modal from \"../../Pages/Modal/Modal\";\nimport ProfileGroup from \"../../Pages/ProfileGroup/ProfileGroup\";\nimport { useState, useEffect } from \"react\";\nimport \"./groups.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Groups = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [modal, setModal] = useState(false);\n  const [group, setGroup] = useState(null);\n  useEffect(() => {\n    const getGroup = () => {\n      fetch(`/api/posts/group/get?userID=${user.userID}`, {\n        method: \"GET\",\n        credentials: 'include',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Credentials\": true\n        }\n      }).then(response => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"Ошибка\");\n      }).then(resObject => {\n        console.log(resObject.groups);\n        setGroup(resObject.groups);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    getGroup();\n  }, [user]);\n  const Toggle = () => setModal(!modal);\n  const GetsAllGroup = groups => {\n    if (groups != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(ProfileGroup, {\n            group: groups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, groups._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  console.log(group);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"search-container-above-cards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"search-input-above-cards\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"search-button-above-cards\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Groups, \"1MB6OO7dJpMLTrFyH11Lk6ZXqw8=\");\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["Modal","ProfileGroup","useState","useEffect","Groups","user","modal","setModal","group","setGroup","getGroup","fetch","userID","method","credentials","headers","then","response","status","json","Error","resObject","console","log","groups","catch","err","Toggle","GetsAllGroup","_id"],"sources":["C:/Users/kazak/OneDrive/Рабочий стол/project/client/src/Components/Groups/Groups.jsx"],"sourcesContent":["import Modal from \"../../Pages/Modal/Modal\"\r\nimport ProfileGroup from \"../../Pages/ProfileGroup/ProfileGroup\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./groups.css\"\r\n\r\nconst Groups = ({ user }) => {\r\n    const [modal, setModal] = useState(false)\r\n    const [group, setGroup] = useState(null);\r\n    useEffect(() => {\r\n        const getGroup = () => {\r\n            fetch(`/api/posts/group/get?userID=${user.userID}`, {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true,\r\n                }\r\n            }).then((response) => {\r\n                if(response.status === 200) return response.json();\r\n                throw new Error(\"Ошибка\");\r\n            }).then((resObject) => {\r\n                console.log(resObject.groups)\r\n                    setGroup(resObject.groups);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        };\r\n        getGroup();\r\n    },[user]);\r\n\r\n    const Toggle = () => setModal(!modal); \r\n    const GetsAllGroup = (groups) => {\r\n        if(groups != null){\r\n            return(\r\n                <div className=\"\" key={groups._id}>\r\n                    <ul className=\"card\">\r\n                        <ProfileGroup group={groups} />\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    console.log(group)\r\n    return(\r\n        <div>\r\n            <div class=\"search-container-above-cards\">\r\n                <div class=\"search-container\">\r\n                    <input type=\"text\" class=\"search-input-above-cards\" placeholder=\"Search...\" />\r\n                    <button class=\"search-button-above-cards\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Groups;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,cAAc;AAAA;AAErB,MAAMC,MAAM,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZ,MAAMO,QAAQ,GAAG,MAAM;MACnBC,KAAK,CAAE,+BAA8BN,IAAI,CAACO,MAAO,EAAC,EAAE;QAChDC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,kCAAkC,EAAE;QACxC;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAGA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOD,QAAQ,CAACE,IAAI,EAAE;QAClD,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC,CAACJ,IAAI,CAAEK,SAAS,IAAK;QACnBC,OAAO,CAACC,GAAG,CAACF,SAAS,CAACG,MAAM,CAAC;QACzBf,QAAQ,CAACY,SAAS,CAACG,MAAM,CAAC;MAClC,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;QACdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDhB,QAAQ,EAAE;EACd,CAAC,EAAC,CAACL,IAAI,CAAC,CAAC;EAET,MAAMsB,MAAM,GAAG,MAAMpB,QAAQ,CAAC,CAACD,KAAK,CAAC;EACrC,MAAMsB,YAAY,GAAIJ,MAAM,IAAK;IAC7B,IAAGA,MAAM,IAAI,IAAI,EAAC;MACd,oBACI;QAAK,SAAS,EAAC,EAAE;QAAA,uBACb;UAAI,SAAS,EAAC,MAAM;UAAA,uBAChB,QAAC,YAAY;YAAC,KAAK,EAAEA;UAAO;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MAC9B,GAHcA,MAAM,CAACK,GAAG;QAAA;QAAA;QAAA;MAAA,QAI3B;IAEd;EACJ,CAAC;EACDP,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;EAClB,oBACI;IAAA,uBACI;MAAK,KAAK,EAAC,8BAA8B;MAAA,uBACrC;QAAK,KAAK,EAAC,kBAAkB;QAAA,wBACzB;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAC,0BAA0B;UAAC,WAAW,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9E;UAAQ,KAAK,EAAC,2BAA2B;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACvD;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAjDIJ,MAAM;AAAA,KAANA,MAAM;AAkDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}